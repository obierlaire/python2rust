# Variables
POETRY_ENV_PYTHON = poetry env use 3.10.10
POETRY = poetry run
PYTHON = python3
SCRIPT = main.py
CYTHON_SCRIPT = main
NUITKA_SCRIPT = script_nuikta
NUMBA_SCRIPT = script_numba

# Ensure build group is installed
ensure-build-deps: setup
	@echo "Ensuring build dependencies are installed..."
	poetry install --with build

# Default target
all: set-up ensure-build-deps cython nuitka numba pypy

.PHONY: setup
setup:
	@echo "Setting up Poetry environment with Python 3.10.10..."
	$(POETRY_ENV_PYTHON)

# Cython target
cython: ensure-build-deps
	@echo "Compiling with Cython..."
	# Compile the Python script to C code and then to a shared object file (.so)
	$(POETRY) cythonize -i -3 $(SCRIPT)
	@echo "Running the compiled Cython module..."
	# Import the compiled module and call the main() function explicitly
	$(POETRY) python -c "import $(CYTHON_SCRIPT); $(CYTHON_SCRIPT).main()"
	@echo "Cython target completed."

# Nuitka target
nuitka: ensure-build-deps
	@echo "Compiling with Nuitka..."
	$(POETRY) nuitka --standalone --onefile $(SCRIPT) -o $(NUITKA_SCRIPT) --clang --lto=yes
	@echo "Compiled with Nuitka"


# Numba target
numba: ensure-build-deps
	@echo "Running with Numba..."
	$(POETRY) $(PYTHON) -c "from numba import jit; exec(open('$(SCRIPT)').read())"
	@echo "Executed with Numba (JIT compiled)"

.PHONY: pypy
pypy:
	@echo "Setting up Poetry environment with PyPy..."
	poetry env use pypy3
	poetry install --without build  # Install only main dependencies for PyPy
	@echo "Running with PyPy..."
	poetry run pypy3 main.py
	@echo "Executed with PyPy"


# Clean target
.PHONY: clean
clean:
	@echo "Cleaning up generated files..."
	# Remove Python bytecode and cache files
	find . -type d -name "__pycache__" -exec rm -rf {} +
	find . -type f -name "*.pyc" -exec rm -f {} +
	find . -type f -name "*.pyo" -exec rm -f {} +
	rm -rf .pytest_cache
	rm -rf .coverage
	rm -rf htmlcov
	
	# Remove Cython-generated C files and shared object files
	rm -f *.c *.so
	
	# Remove Nuitka build directories and standalone output
	rm -rf dist/ build/ main.build main.dist script_nuitka
	
	# Remove temporary and build files generated by other tools
	rm -rf *.dSYM
	
	@echo "Cleaned up."

.PHONY: ensure-deps
ensure-deps:
	@echo "Install poetry dependencies..."
	poetry install --without build

.PHONY: test test-unit test-integration clean

test-unit:
	@echo "Running unit tests..."
	$(POETRY) $(PYTHON) -m unittest test_main.py -k TestComputationalFunctions -v

test-integration:
	@echo "Running integration tests..."
	$(POETRY) $(PYTHON) -m unittest test_main.py -k TestWebInterface -v

test:
	@echo "Running black box tests..."
	$(POETRY) $(PYTHON) -m unittest test_service.py -v

# Run target
run: ensure-deps
	@echo "Running the script with Poetry..."
	$(POETRY) $(PYTHON) $(SCRIPT)

.PHONY: all ensure-build-deps cython nuitka numba pypy clean run
